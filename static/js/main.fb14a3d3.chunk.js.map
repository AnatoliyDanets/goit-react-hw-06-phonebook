{"version":3,"sources":["components/Filter/Filter.module.css","components/Container/Container.module.css","redux/contacs/contacts-actions.js","redux/contacs/contacts-selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Container/Container.jsx","App.js","reportWebVitals.js","redux/contacs/contacts-reducer.js","redux/store.js","index.js","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","filterList","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","normalizedFilter","toLowerCase","includes","ContactForm","dispatch","useDispatch","useSelector","useState","setName","setNumber","handleInput","e","currentTarget","value","reset","onSubmit","preventDefault","find","contact","alert","console","log","className","s","form","form__label","form__input","type","pattern","title","required","onChange","form__btn","ContactListItem","contact__item","contact__text","contact__btn","onClick","ContactList","map","Filter","filter__input","Container","children","container","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","_","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.fb14a3d3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2kh6l\",\"filter__input\":\"Filter_filter__input__1OEou\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__27JRt\"};","// import { ADD_CONTACT, DELETE_CONTACT, FILTER } from \"./contacts-type\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContact = createAction(\"contact/add\", ({ name, number }) => {\r\n  return {\r\n    payload: {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    },\r\n  };\r\n});\r\n\r\nexport const deleteContact = createAction(\"contact/delete\");\r\n// export const deleteContact = (contactId) => ({\r\n//   type: DELETE_CONTACT,\r\n//   payload: contactId,\r\n// });\r\nexport const filterList = createAction(\"contact/filter\");\r\n// export const filterList = (value) => ({\r\n//   type: FILTER,\r\n//   payload: value,\r\n// });\r\n","export const getContacts = (state) => state.contacts.items;\r\nexport const getFilter = (state) => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = (state) => {\r\n  const normalizedFilter = getFilter(state).toLowerCase();\r\n  return getContacts(state).filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport s from \"../ContactForm/ContactForm.module.css\";\r\nimport { addContact } from \"../../redux/contacs/contacts-actions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getContacts } from \"../../redux/contacs/contacts-selectors\";\r\n\r\nexport default function ContactForm() {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getContacts);\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleInput = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    contacts.find(\r\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\r\n    )\r\n      ? alert(` ${name} already in contacts`)\r\n      : dispatch(addContact({ name, number }));\r\n    console.log(contacts);\r\n\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.form}>\r\n      <label className={s.form__label}>\r\n        Name\r\n        <input\r\n          className={s.form__input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={handleInput}\r\n        />\r\n      </label>\r\n      <label className={s.form__label}>\r\n        Number\r\n        <input\r\n          className={s.form__input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={handleInput}\r\n        />\r\n      </label>\r\n      <button className={s.form__btn} type=\"submit\">\r\n        Add Contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   onSubmit: (name, number) => dispatch(addContact(name, number)),\r\n// });\r\n// export default connect(null, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"../ContactList/ContactList.module.css\";\r\nimport { deleteContact } from \"../../redux/contacs/contacts-actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nexport default function ContactListItem({ id, name, number }) {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <li key={id} className={s.contact__item}>\r\n      <div>\r\n        <span className={s.contact__text}>{name}: </span>\r\n        <span className={s.contact__text}>{number}</span>\r\n      </div>\r\n      <button\r\n        className={s.contact__btn}\r\n        onClick={() => {\r\n          dispatch(deleteContact(id));\r\n        }}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   onDelete: (id) => dispatch(deleteContact(id)),\r\n// });\r\n//  connect(null, mapDispatchToProps)(ContactListItem);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ContactListItem from \"./ContactListItem\";\r\nimport s from \"../ContactList/ContactList.module.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getVisibleContacts } from \"../../redux/contacs/contacts-selectors\";\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  return (\r\n    <ul className={s.contact}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactListItem key={id} id={id} name={name} number={number} />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n","import React from \"react\";\r\nimport s from \"../Filter/Filter.module.css\";\r\nimport { filterList } from \"../../redux/contacs/contacts-actions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getFilter } from \"../../redux/contacs/contacts-selectors\";\r\n\r\nexport default function Filter() {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <label className={s.filter}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.filter__input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => dispatch(filterList(e.currentTarget.value))}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n","import s from \"../Container/Container.module.css\";\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n","import \"./App.css\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\nimport Container from \"./components/Container\";\n\nexport default function App() {\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport { addContact, deleteContact, filterList } from \"./contacts-actions\";\r\n// import { ADD_CONTACT, DELETE_CONTACT, FILTER } from \"./contacts-type\";\r\n\r\nconst items = createReducer([], {\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\nconst filter = createReducer(\"\", {\r\n  [filterList]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport contactsReducer from \"./contacs/contacts-reducer\";\r\nimport logger from \"redux-logger\";\r\n\r\nconst contactsPersistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }).concat(logger),\r\n\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n//\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactList_contact__3rJt1\",\"contact__item\":\"ContactList_contact__item__3ocIV\",\"contact__text\":\"ContactList_contact__text__1PFOR\",\"contact__btn\":\"ContactList_contact__btn__3XFkT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__XldtF\",\"form__label\":\"ContactForm_form__label__8p4uS\",\"form__input\":\"ContactForm_form__input__3sL7C\",\"form__btn\":\"ContactForm_form__btn__1lXHt\"};"],"sourceRoot":""}